# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Tests

on:
  push:
    branches: [ "typeorm" ]
  pull_request:
    branches: [ "typeorm" ]

jobs:
  postgres-jobs:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: myapp
          POSTGRES_PASSWORD: development
          POSTGRES_DB: test
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
      - run: npm run build --if-present
      - name: Wait for Postgres to be ready
        run: |
          while ! nc -z localhost 5432; do sleep 1; done
      - name: Tests unit 
        run: npm run test
      - name: Tests e2e
        run: npm run test:e2e
        env: # same envs from [[.env.example]]
          DB_TYPE: postgres
          DB_PORT: 5432
          DB_USER: myapp
          DB_PASSWORD: development
          DB_HOST: localhost
          DB_TEST_NAME: test
          JWT_SECRET: secretKey
          JWT_EXPIRE_IN: 1h
